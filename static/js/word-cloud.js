(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var fill=d3.scale.category20b();var w=window.innerWidth,h=window.innerHeight;var max,fontSize;var layout=d3.layout.cloud().timeInterval(Infinity).size([w,h]).fontSize(function(d){return fontSize(+d.value)}).text(function(d){return d.key}).on("end",draw);var svg=d3.select("#vis").append("svg").attr("width",w).attr("height",h);var vis=svg.append("g").attr("transform","translate("+[w>>1,h>>1]+")");update();window.onresize=function(event){update()};function draw(data,bounds){var w=window.innerWidth,h=window.innerHeight;svg.attr("width",w).attr("height",h);scale=bounds?Math.min(w/Math.abs(bounds[1].x-w/2),w/Math.abs(bounds[0].x-w/2),h/Math.abs(bounds[1].y-h/2),h/Math.abs(bounds[0].y-h/2))/2:1;var text=vis.selectAll("text").data(data,function(d){return d.text.toLowerCase()});text.transition().duration(1e3).attr("transform",function(d){return"translate("+[d.x,d.y]+")rotate("+d.rotate+")"}).style("font-size",function(d){return d.size+"px"});text.enter().append("text").attr("text-anchor","middle").attr("transform",function(d){return"translate("+[d.x,d.y]+")rotate("+d.rotate+")"}).style("font-size",function(d){return d.size+"px"}).style("opacity",1e-6).transition().duration(1e3).style("opacity",1);text.style("font-family",function(d){return d.font}).style("fill",function(d){return fill(d.text.toLowerCase())}).text(function(d){return d.text});vis.transition().attr("transform","translate("+[w>>1,h>>1]+")scale("+scale+")")}function update(){layout.font("impact").spiral("archimedean");fontSize=d3.scale["sqrt"]().range([10,100]);if(tags.length){fontSize.domain([+tags[tags.length-1].value||1,+tags[0].value])}layout.stop().words(tags).start()}},{}]},{},[1]);
